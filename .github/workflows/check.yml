name: Checks

on:
  pull_request:
    branches: [main, develop, staging]
  push:
    branches: [main, develop, staging]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint
        run: echo "üîç Lint OK"

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Tests
        run: echo "üß™ Tests OK"

  security:
    name: security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Audit packages
        run: |
          npm install
          npm audit --audit-level=high || exit 1

  detect-apps:
    name: Detect modified apps
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set matrix dynamically
        id: set-matrix
        run: |
          echo "üîç Looking for modified apps..."
          changed_apps=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^apps/' | cut -d '/' -f2 | sort -u | jq -R . | jq -s .)
          if [ -z "$changed_apps" ] || [ "$changed_apps" = "[]" ]; then
            echo "No apps changed."
            changed_apps="[]"
          fi
          echo "matrix={\"app\":$changed_apps}" >> $GITHUB_OUTPUT

  noop-typecheck:
    name: typecheck (noop)
    needs: detect-apps
    if: ${{ needs.detect-apps.outputs.matrix == '{"app":[]}' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "‚è≠Ô∏è No apps changed ‚Äî skipping typecheck"

  typecheck:
    name: typecheck ${{ matrix.app }}
    needs: detect-apps
    if: ${{ needs.detect-apps.outputs.matrix != '{"app":[]}' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-apps.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "üî† Typechecking app: ${{ matrix.app }}"
          # cd apps/${{ matrix.app }} && npm run typecheck

  noop-build:
    name: build (noop)
    needs: detect-apps
    if: ${{ needs.detect-apps.outputs.matrix == '{"app":[]}' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "‚è≠Ô∏è No apps changed ‚Äî skipping build"

  build:
    name: build ${{ matrix.app }}
    needs: detect-apps
    if: ${{ needs.detect-apps.outputs.matrix != '{"app":[]}' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-apps.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "üèóÔ∏è Building app: ${{ matrix.app }}"
          # cd apps/${{ matrix.app }} && npm run build